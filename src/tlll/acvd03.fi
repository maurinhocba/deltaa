 SUBROUTINE acvd03(ifpre,heade,quad,lside,nelem,nnode,zigzag)
 !******************************************************************
 !
 !*** activates degrees of freedom
 !
 !******************************************************************
 USE npo_db, ONLY : naeul
 USE esets_db, ONLY : gnods, gelem !INTENT(OUT) gnods(maxnn,melen)
 IMPLICIT NONE

 ! dummy arguments
 INTEGER (kind=4):: nelem,nnode,ifpre(:,:)    !(OUT) DOFs
 TYPE (ele03), POINTER :: heade   !pointer to first element in the set
 LOGICAL, INTENT(IN) :: quad
 LOGICAL, INTENT(IN OUT) :: lside
 LOGICAL, INTENT(IN) :: zigzag

 TYPE (section), POINTER :: sec      !auxiliar pointer
 TYPE (ele03), POINTER  :: e                     !element pointers
 INTEGER (kind=4) :: i,osec,isec,secty

!***  create topological array  lnods(7:9,nelem)

 IF(quad) THEN
   IF(.NOT.lside) CALL toar03(heade,lside,nelem)
 END IF

!*** activates degrees of freedom

   e => heade                         !point to first element
   osec = -1
   DO
     IF (.NOT.ASSOCIATED (e) ) EXIT   !if all elements processed, Exit loop
     isec = e%matno
     IF( isec /= osec )THEN
       sec => psecs(isec)%p
       secty = sec%secty    !section constitutive type
       osec = isec
     END IF
     DO i=1,3
       !IF(ifpre(1,e%lnods(i)) == 1)THEN
         ifpre(1:3,e%lnods(i)) = 0        !release Translational DOFs
         ifpre(4:5,e%lnods(i+3)) = 0      !release Rotational DOFs
         IF( secty == 15 .AND. zigzag ) ifpre(7:8,e%lnods(i)) = 0
       !END IF
     END DO
     gelem = gelem + 1                !update total number of elements
     gnods(1:nnode,gelem) = e%lnods      !pass to global array
     naeul(e%lnods(4:6)) = .TRUE.     !release local systems
     e => e%next                      !point to next element
   END DO

 RETURN
 END SUBROUTINE acvd03
