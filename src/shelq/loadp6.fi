 SUBROUTINE loadp6 (igrav,force,gvect,gravy,heade)
 !********************************************************************
 !
 !***  evaluates gravity and surface loads for shell elements
 !
 !********************************************************************
 IMPLICIT NONE

 INTEGER (kind=4) :: igrav
 REAL (kind=8) :: force(:,:),gvect(3),gravy
 TYPE (ele06), POINTER  :: heade
 !        local variable

 TYPE (ele06), POINTER  :: elem
 INTEGER (kind=4) g,n,l,isec,osec
 REAL    (kind=8) weigt,pvect(3),fvect(3),auxvl,rload(3,nnode)
 TYPE (section), POINTER :: sec

 IF(igrav /= 0) THEN
   osec = -1
   elem => heade
   DO
     IF (.NOT.ASSOCIATED (elem) ) EXIT    !all elements processed, Exit loop

     isec  = elem%matno                     !associated material
     IF( isec /= osec )THEN             !present and previous material diff
       sec => psecs(isec)%p
       weigt  = gravy*sec%rprop(5)      !surface density
       osec   = isec                    !update previous material
     END IF

     ! initializes the load vector
     rload = 0d0

     IF(weigt == 0.0d0) CYCLE

     pvect = weigt*gvect

     DO g = 1,ngaus
       auxvl = elem%dvolu(g)
       DO n = 1,nnode
         fvect = shape(n,g)*auxvl*pvect
         rload(1:3,n) = rload(1:3,n) + fvect
       END DO
     END DO

     DO n = 1,nnode
       l = elem%lnods(n)
       force(1:3,l) = force(1:3,l) + rload(1:3,n)
     END DO
     elem => elem%next                       !point to next element
   END DO
 END IF
 RETURN
 END SUBROUTINE loadp6
