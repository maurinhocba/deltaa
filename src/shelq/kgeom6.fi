 SUBROUTINE kgeom6(nnode,ndofn,nvarl,cartd,lb,t,dx,strdv,estif)
 !******************************************************************************
 !
 !***** this routine compute the geometric part of the tangent stiffness
 !                   for element 6
 !******************************************************************************
 IMPLICIT NONE
 !                        routine parameters

 INTEGER (kind=4) nnode,ndofn,nvarl

 REAL (kind=8), INTENT(IN) :: cartd(:,:),lb(:,:,:),t(:,:),dx(:,:),strdv(:)
 REAL (kind=8), INTENT(IN OUT) :: estif(:)

 !                        local variables

 INTEGER (kind=4) :: j,l,ni,nj,idof,jdof,poses

 REAL (kind=8) :: coef1,coef2,ckgeo

 !                        local functions

 INTEGER (kind=4) :: poesti             !position i,j in estif(nxn)
 poesti(ni,nj,nvarl) = (2*nvarl-ni)*(ni-1)/2 + nj

 !     influence of membrane stresses

 DO ni = 1,nnode                                       ! node i
   idof = (ni-1)*ndofn
   !                                               [ n11  n12 ]
   !       [coef1,coef2] = [d(n(i)/dx,d(n(i)/dy] * [ n21  n22 ]

   coef1 = (strdv(1)*cartd(ni,1) + strdv(3)*cartd(ni,2))
   coef2 = (strdv(3)*cartd(ni,1) + strdv(2)*cartd(ni,2))
   !       for every node greater or equal than ni
   DO nj = ni,nnode                                    ! node j
     jdof = (nj-1)*ndofn
     !         ckgeo = [coef1,coef2] . [d(n(j)/dx,d(n(j)/dy]
     ckgeo = coef1*cartd(nj,1) + coef2*cartd(nj,2)
     DO j = 1,3 !ndime
       poses = poesti(idof+j,jdof+j,nvarl)           ! diagonals,
       estif(poses) = estif(poses) + ckgeo
     END DO
   END DO                                            ! nj
 END DO                                              ! ni

 !     influence of bending stresses

 DO ni = 1,nnode                                         !  node i
   idof = (ni-1)*ndofn
   !                ni   with   ni
   coef1 = (strdv(4)*cartd(ni,1) + strdv(6)*cartd(ni,2))
   coef2 = (strdv(6)*cartd(ni,1) + strdv(5)*cartd(ni,2))
   ckgeo = - DOT_PRODUCT(t(:,ni),dx(:,1))*coef1 &
           - DOT_PRODUCT(t(:,ni),dx(:,2))*coef2
   !               delta t(i)  with  delta t(i)
   DO l = 4,5
     poses = poesti(idof+l,idof+l,nvarl)
     estif(poses) = estif(poses) + ckgeo
   END DO
   !               delta u(i)  with  delta t(i)
   ckgeo = coef1*cartd(ni,1) + coef2*cartd(ni,2)
   DO j = 1,3 !ndime
     poses = poesti(idof+j,idof+4,nvarl)
     estif(poses) = estif(poses) - ckgeo*lb(j,2,ni)
     poses = poses + 1
     estif(poses) = estif(poses) + ckgeo*lb(j,1,ni)
   END DO
   !                ni  with  nj    ni <> nj
   DO nj = ni+1,nnode
     jdof = (nj-1)*ndofn

     ckgeo = coef1*cartd(nj,1) + coef2*cartd(nj,2)

     DO j=1,3 !ndime
       ! over the submatrix diagonal  delta u(i)   with   delta t(j)
       poses = poesti(idof+j,jdof+4,nvarl)
       estif(poses) = estif(poses) - ckgeo*lb(j,2,nj)
       poses = poses + 1
       estif(poses) = estif(poses) + ckgeo*lb(j,1,nj)
       ! under the submatrix diagonal  delta t(i)   with   delta u(j)
       poses = poesti(idof+4,jdof+j,nvarl)
       estif(poses) = estif(poses) - ckgeo*lb(j,2,ni)
       poses = poesti(idof+5,jdof+j,nvarl)
       estif(poses) = estif(poses) + ckgeo*lb(j,1,ni)
     END DO
   END DO                                              ! nj
 END DO                                                ! ni

 END SUBROUTINE kgeom6
