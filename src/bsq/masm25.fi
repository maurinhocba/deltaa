 SUBROUTINE masm25(ifpre,heade,emass,mass,sumat,lumpd)

 IMPLICIT NONE
 INTEGER(kind=4), INTENT(IN) :: ifpre(:,:)
 LOGICAL, INTENT(IN) :: lumpd
 REAL (kind=8), INTENT(IN OUT) :: emass(:,:),sumat,mass(:)
 TYPE( ele25 ), POINTER :: heade

 INTEGER (kind=4), PARAMETER :: ndime=3,nnode=4
 INTEGER (kind=4) :: i,j,l,n,ii,jj,lm(ndime,nnode),isec,osec
 REAL (kind=8) :: voli,rhoel,ms(78),thick,sume1,fac
 TYPE( ele25 ), POINTER :: e
 TYPE (section), POINTER :: sec

 INTEGER (kind=4) poesti
 poesti(i,j,n) = (2*n-i)*(i-1)/2+j    ! position i,j in stiff(nxn)

 sume1 = 0.
 osec = -1
 e => heade
 DO
   IF( .NOT.ASSOCIATED (e) )EXIT
   isec = e%matno                    !associated material
   IF( isec /= osec )THEN
     sec => psecs(isec)%p
     IF( sec%secty == 12 )THEN
       thick = sec%rprop(1)                !shell thickness
       rhoel = sec%mtbas%prope(5)*thick    !surface density
     ELSE
       rhoel = sec%rprop(5)                !surface density
     END IF       !shell thickness
     osec = isec
   END IF
   voli = e%area(0)*thick

   !---generates lumped mass matrix proportional to diagonal

   DO i=1,nnode
     l = e%lnods(i)
     fac = (e%area(i)+e%area(nextn(i+2)))/2d0*voli  !nodal factor
     emass(1:ndime,l) = emass(1:ndime,l) + fac
   END DO
   sume1 = sume1 + voli!mass of the set

   IF(.NOT.lumpd)THEN  !consistent mass matrix
     ms = 0d0          !initializes element mass matrix
     n  = nnode*ndime  !number of element DOFs
     DO i=1,4          !number of sides
       fac = e%area(i)*voli/4d0   !side area / 2
       IF( i < nnode )THEN  !for the first three sides
         ii = 3*i-2         !first dof of first node
         jj = ii +3         !first dof of second node
       ELSE
         ii = 1             !first dof of second node
         jj = 10            !first dof of first node
       END IF
       DO j=1,ndime    !for each space direction
         l = poesti(ii,ii,n)  !diagonal of first node
         ms(l) = ms(l) + fac   !
         l = poesti(jj,jj,n)  !diagonal of second node
         ms(l) = ms(l) + fac
         l = poesti(ii,jj,n)  !cross value
         ms(l) = ms(l) + fac
         ii = ii+1     !increase DOFs
         jj = jj+1
       END DO
     END DO
     lm = ifpre(1:ndime,e%lnods(1:nnode))
     CALL ensmat(n,lm(1,1),ms(1),mass(1))
   END IF
   e => e%next
 END DO
 !IF(iwrit == 1) &
 WRITE(lures,"(//'  total mass for shell element :', e15.7)")sume1
 sumat = sumat + sume1
 RETURN
 END SUBROUTINE masm25
