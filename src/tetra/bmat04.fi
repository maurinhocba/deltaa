 SUBROUTINE bmat04(cd,bdev,t,bvol,cds,facs)

 !*** Deviatoric and volumetric B matrices of Tetrahedra

 IMPLICIT NONE

 REAL (kind=8), INTENT(IN) :: cd(4,3),t(3,3),facs(0:4),cds(4,3,4)
 REAL (kind=8), INTENT(OUT) :: bdev(3,4,6),bvol(3,8)

 INTEGER (kind=4) :: j,i,k,l

 DO j=1,4          !node
   bdev(:,j,1) = +(2d0*cd(j,1)*t(:,1)-    cd(j,2)*t(:,2)-    cd(j,3)*t(:,3))/3d0
   bdev(:,j,2) = +(   -cd(j,1)*t(:,1)+2d0*cd(j,2)*t(:,2)-    cd(j,3)*t(:,3))/3d0
   bdev(:,j,3) = +(   -cd(j,1)*t(:,1)-    cd(j,2)*t(:,2)+2d0*cd(j,3)*t(:,3))/3d0
   bdev(:,j,4) = + cd(j,2)*t(:,1) + cd(j,1)*t(:,2)
   bdev(:,j,5) = + cd(j,3)*t(:,1) + cd(j,1)*t(:,3)
   bdev(:,j,6) = + cd(j,2)*t(:,3) + cd(j,3)*t(:,2)
   bvol(:,j) = (cd(j,1)*t(:,1)+cd(j,2)*t(:,2)+cd(j,3)*t(:,3))*facs(0)
 END DO
 bvol(:,5:8) = 0d0
 DO i=1,4 !for each neighbour element
   IF(facs(i) /= 0d0 )THEN  !if element exists
     DO j=1,3          !for each node on the face
       k = kk(j,i)     !position
       bvol(:,k) = bvol(:,k) + cds(j,:,i)*facs(i)
     END DO
     bvol(:,i+4) = bvol(:,i+4) + cds(4,:,i)*facs(i)
   END IF
 END DO

 RETURN
 END SUBROUTINE bmat04
