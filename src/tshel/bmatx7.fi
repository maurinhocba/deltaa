 SUBROUTINE bmatx7(ansmm,cartd,lb,bmatx,dx,dt,ndofe,nangl,shape,nnass,tt)
 !******************************************************************************
 !
 !***** this routine compute the tangent deformation matrix for element 7
 !      bending and membrane for ansmm = 0
 !******************************************************************************
 IMPLICIT NONE
 !                      routine parameters

 INTEGER (kind=4) ansmm, & ! ANS Membrane Model
                  nnass, & ! ANS Shear Model
                  ndofe    ! number of DOFs per element

 REAL (kind=8), INTENT(IN) :: cartd(:,:),  & ! cartesian derivatives at Gauss Point
                              lb(:,:,:),   & ! reduced local systens at nodes
                              dx(:,:),     & ! mid-surface derivatives at Gauss Point
                              dt(:,:),     & ! director derivatives at Gauss Point
                              tt(:),       & ! director at Gauss Point
                              shape(:)       ! shape functions at Gauss Point
 REAL (kind=8), INTENT(IN), POINTER :: nangl(:,:)  ! material local system for RZT
 REAL (kind=8), INTENT(OUT) :: bmatx(:,:,:)  !(ndofn,nnode,nstre)

 !                      local variables

 INTEGER (kind=4) n

 REAL    (kind=8) c11,c12,c21,c22

 DO n=1,nnode
   IF(ansmm == 0) THEN
     ! membrane contribution (mid-surface displacement)
     bmatx(1:3,n,1) =  cartd(n,1)*dx(:,1)
     bmatx(1:3,n,2) =  cartd(n,2)*dx(:,2)
     bmatx(1:3,n,3) =  cartd(n,1)*dx(:,2) + cartd(n,2)*dx(:,1)
   END IF

   ! bending contribution to mid-surface displacement
   bmatx(1:3,n,4) =  cartd(n,1)*dt(:,1)
   bmatx(1:3,n,5) =  cartd(n,2)*dt(:,2)
   bmatx(1:3,n,6) =  cartd(n,1)*dt(:,2) + cartd(n,2)*dt(:,1)

   c11 = DOT_PRODUCT(dx(:,1),lb(:,1,n))
   c12 = DOT_PRODUCT(dx(:,1),lb(:,2,n))
   c21 = DOT_PRODUCT(dx(:,2),lb(:,1,n))
   c22 = DOT_PRODUCT(dx(:,2),lb(:,2,n))
   ! bending contribution to directors
   bmatx(4,n,4) = - cartd(n,1)*c12
   bmatx(5,n,4) = + cartd(n,1)*c11
   bmatx(4,n,5) = - cartd(n,2)*c22
   bmatx(5,n,5) = + cartd(n,2)*c21
   bmatx(4,n,6) =(- cartd(n,1)*c22 - cartd(n,2)*c12)
   bmatx(5,n,6) =(+ cartd(n,1)*c21 + cartd(n,2)*c11)
   ! shear contributions
   IF( nnass == ngaus )THEN
     bmatx(1:3,n,7) =  cartd(n,1)*tt
     bmatx(1:3,n,8) =  cartd(n,2)*tt
     bmatx(4,n,7) = - shape(n)*c12
     bmatx(5,n,7) = + shape(n)*c11
     bmatx(4,n,8) = - shape(n)*c22
     bmatx(5,n,8) = + shape(n)*c21
   END IF
   IF( ndofe == 7 )THEN
     bmatx(6:7,n, 9) = cartd(n,1)*nangl(:,n)
     bmatx(6:7,n,10) = cartd(n,2)*(/-nangl(2,n),nangl(1,n)/)
     bmatx(6:7,n,11) = cartd(n,2)*nangl(:,n)
     bmatx(6:7,n,12) = cartd(n,1)*(/-nangl(2,n),nangl(1,n)/)
     bmatx(6:7,n,13) = shape(n)*nangl(:,n)
     bmatx(6:7,n,14) = shape(n)*(/-nangl(2,n),nangl(1,n)/)
   END IF

 END DO
 RETURN
 END SUBROUTINE bmatx7
