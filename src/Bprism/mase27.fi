 SUBROUTINE mase27 (nreqs,nelem,heade,ngrqs,narch,angle,sname,locax,quad)

 !performs the final tasks in ACVD05 at a restart

 IMPLICIT NONE

 INTEGER (kind=4) :: nreqs,nelem,narch,locax
 INTEGER (kind=4), POINTER  :: ngrqs(:)
 REAL (kind=8 ) :: angle
 TYPE (ele27), POINTER  :: heade
 CHARACTER (len=*) :: sname
 LOGICAL :: quad,gppos

 INTEGER (kind=4) i,nn
 TYPE (ele27), POINTER :: e
 TYPE (section), POINTER :: sec    !pointer to a section data
 TYPE (postv), POINTER :: postp       !pointer to first postprocess variable

 e => heade                         !point to first element
 WRITE(17,ERR=9) 27,nelem,sname     !elm_type, number of elements, set_name
 nn = 6
 IF( quad ) nn = 15
 sec => psecs(e%matno)%p            !point to section of first element in the set
 IF( sec%secdef(4) > 0 )THEN        !if special post-process variables
   WRITE(17,err=9) 6,nn,8+sec%secdef(5),locax !ngaus=3x2,nnode,nvarg
   postp => sec%postp
   WRITE (17,ERR=9) sec%secdef(4),e%matno  !writes position of section in list
   DO i=1,sec%secdef(4)
     WRITE (17,err=9) postp%type,postp%dim,postp%name
     postp => postp%next
   END DO
 ELSE
   WRITE(17,ERR=9) 6,nn,8,locax ! 6=3x2=ngaus, nodes,  8=nvarg
 END IF
 gppos = ABS(gpcoo(1,1)-0.5d0) < 1e-6   !.TRUE. = mid-side points
 WRITE(17).TRUE.,gppos
 DO
   IF (.NOT.ASSOCIATED (e) ) EXIT   !if all elements processed, exit loop
   IF( quad )THEN
     WRITE(17,ERR=9) e%matno,e%lnods((/1:3,7:9,4:6/)),0,0,0,e%lnods(10:12)   !material, and nodes
   ELSE
     WRITE(17,ERR=9) e%matno,e%lnods((/1:3,7:9/))  !material, and nodes
   END IF
   e => e%next                      !point to next element
 END DO

 WRITE(17,ERR=9) angle, 0d0, 0d0    !set angles
 e => heade                         !point to first element
 DO
   IF (.NOT.ASSOCIATED (e) ) EXIT     !if all elements processed, exit loop
   WRITE(17,ERR=9) e%angle, 0d0, 0d0  !local angles
   e => e%next                      !point to next element
 END DO

 IF(nreqs > 0) THEN                         !if output requested
   CALL openfi(nfile=21,narch=narch)        !open file
   WRITE(narch,ERR=9)nreqs,9,(ngrqs(i),i=1,nreqs) !write header
   WRITE(narch,err=9) 27,sname,'S_xx ','S_yy ','S_zz ','S_xy ','S_xz ', &
                               'S_yz ','Eps  ','Eqs  ','S_y  '
 END IF

 RETURN
 9 CALL runen2('')
 END SUBROUTINE mase27
