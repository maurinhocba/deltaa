 SUBROUTINE kgmm24 (a,b,cd,s,stiff,ii,nvarl,d1)
 !
 ! compute geometric stiffness due to membrane forces LST (NBST)
 ! for side II
 !
 IMPLICIT NONE
 ! dummy arguments
 REAL (kind=8), INTENT(IN) ::  a(3),b(3), & !cartesian derivatives of CST
                               cd(4,2),   & !cartesian derivatives of LST
                               d1,        & !factor for linear strain triangle
                               s(3)         !membrane forces * A/3
 REAL (kind=8), INTENT(OUT) :: stiff(:)     !stiffness matrix
 INTEGER (kind=4), INTENT(IN) :: ii,      & !node position in connectivities
                                 nvarl      !number of DOFs
 ! local variables
 INTEGER (kind=4) i,j,k,l,n,pos,jj !different index
 REAL (kind=8) :: value,d2         !diagonal value to add
 INTEGER (kind=4) poesti
 poesti(nvarl,i,j) = (2*nvarl-i)*(i-1)/2+j    ! position i,j in stiff(nxn)

 d2 = 1d0 - d1
 IF( d2 > 1d-3 )THEN    ! if side element exist, use LST approximation (CD)
   jj = 3*(ii-1)   ! position of extra node DOFs
   l = 0           ! initializes DOF position I
   DO i=1,4        ! for each node
     IF( i == 4 ) l = l + jj   !for extra node, Add JJ to I
     n = l         ! initializes DOF position J
     DO j=i,4      ! for each node (upper part)
       value = d2*(+ s(1)*cd(i,1)*cd(j,1) + s(2)*cd(i,2)*cd(j,2) &
                   + s(3)*(cd(i,2)*cd(j,1)+cd(j,2)*cd(i,1)))
       DO k=1,3    ! for each DOF (diagonal only)
         pos = poesti(nvarl,l+k,n+k)   ! (I,J)
         stiff(pos) = stiff(pos) + value
       END DO
       n = n + 3   ! increment DOF position J
       IF( j == 3 ) n = n + jj  ! for extra node Add JJ DOF J
     END DO
     l = l + 3     ! increment DOF position I
   END DO
 END IF

 IF( d1 > 0d0 )THEN  ! if only main triangle nodes are considered, use CST
   l = 0           ! initializes DOF position I
   DO i=1,3        ! for each node I
     n = l         ! initializes DOF position J
     DO j=i,3      ! for each node J
       !value = d1*(+ s(1)*a(i)*a(j) + s(2)*b(i)*b(j)   &
       value = d1*(+ s(1)*b(i)*b(j) + s(2)*a(i)*a(j)   &
                   - s(3)*(b(i)*a(j)+b(j)*a(i)) )
       DO k=1,3    ! for each DOF (diagonal only)
         pos = poesti(nvarl,l+k,n+k)   ! (I,J)
         stiff(pos) = stiff(pos) + value
       END DO
       n = n + 3   ! increment DOF position J
     END DO
     l = l + 3     ! increment DOF position I
   END DO
 END IF

 RETURN
 END SUBROUTINE kgmm24
