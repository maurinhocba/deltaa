 SUBROUTINE outp12(b1,b2,iwrit,heade,nreqs,narch,ngrqs,ttime,nstra)
 !--------------------------------------------------------------------
 !
 !       output routine for 3-D solid element (TLF)
 !
 !--------------------------------------------------------------------
 IMPLICIT NONE

 INTEGER (kind=4), INTENT (IN) :: iwrit,    &!flag for output into ASCII file
                                  nreqs,    &!number of elements for output
                                  nstra,    &!number of shell integrated stresses
                                  narch      !output file number
 INTEGER (kind=4), POINTER :: ngrqs(:)   !element numbers for output
 REAL (kind=8), INTENT(IN) :: ttime
 LOGICAL, INTENT(IN) :: b1,   & !flag for output at selected points
                        b2      !flag for global output
 TYPE (ele12), POINTER  :: heade  !pointer to first element

 INTEGER (kind=4) k,l,ielem,osec
 REAL (kind=8) stres(nstre),sxx,syy,sxy,szz,sxz,syz,vm
 TYPE (ele12), POINTER :: e

 !     output at selected elements for HISTORY

 IF(b1 .AND. (nreqs > 0)) THEN
   osec = -1
   WRITE(narch,ERR=9999) ttime                  !write process time
   DO l=1,nreqs                        !for each element
     k = MOD(ngrqs(l)-1,ngaus) + 1
     ielem = (ngrqs(l)-1) / ngaus + 1
     e => heade                   !point to first element
     DO                           !search for element with label IELEM
       IF( e%numel == ielem )EXIT !if found, exit search
       e => e%next                !point to next element
     END DO
     !stres = e%stres(:,k)     !integrated Kirchhoff stresses
     !vm = (stres(1)+stres(2)+stres(3))/3d0
     !sxx = stres(1)-vm         !
     !syy = stres(2)-vm         !
     !szz = stres(3)-vm         !
     !sxy = stres(4)            !Stress XY
     !sxz = stres(5)            !Stress XZ
     !syz = stres(6)            !Stress YZ
     !vm = SQRT(1.5d0*(sxx**2+syy**2+szz**2+2d0*sxy**2+2d0*sxz**2+2d0*syz**2))  !Von Mises stress
     !WRITE(narch,ERR=9999)(stres(m),m=1,6),0d0,vm
     WRITE(narch,ERR=9999)e%stint(1:8)
   END DO
 END IF
 !
 ! *** writes complete stress state on file 12 for post-process
 !
 IF(b2) THEN
   IF(iwrit == 1) WRITE(lures,900,ERR=9999)  !if echo to ASCII file
   !osec = -1                              !initializes
   e => heade                             !point to first element
   DO                                     !loop over all elements
     IF (.NOT.ASSOCIATED (e) ) EXIT       !if last element processed, exit
     !isec = e%matno                      !associated material
     !newm = isec /= osec
     !IF( newm )THEN
     !  CALL sect_search(isec,found,sec)
     !  osec = isec
     !END IF
     !-------------------------------------------------------------
      IF(iwrit == 1)WRITE(lures,"('elem = ',i5,' alpha= ',e12.4)",ERR=9999) e%numel,e%alpha
     k= 1
     DO k=1,ngaus
       stres = e%stres(:,k)     !integrated Kirchhoff stresses on material axis
       vm = (stres(1)+stres(2)+stres(3))/3d0
       sxx = stres(1)-vm         !
       syy = stres(2)-vm         !
       szz = stres(3)-vm         !
       sxy = stres(4)            !Stress XY
       sxz = stres(5)            !Stress XZ
       syz = stres(6)            !Stress YZ
       vm = SQRT(1.5d0*(sxx**2+syy**2+szz**2+2d0*sxy**2+2d0*sxz**2+2d0*syz**2))  !Von Mises stress
       IF(iwrit == 1)WRITE(lures,920,ERR=9999) k,stres(1:6),0d0,vm
     END DO
     WRITE(16,ERR=9999) (stres(l),l=1,nstre),0d0,vm,e%stint(1:nstra)

     e => e%next                   !point to next element
   END DO
   ! Print integrated forces and moments
   IF( iwrit == 1 )THEN
     IF( nstra ==  8 )THEN
        WRITE(lures,901)
     ELSE
        WRITE(lures,902)
     END IF
     e => heade                             !point to first element
     DO                                     !loop over all elements
       IF (.NOT.ASSOCIATED (e) ) EXIT       !if last element processed, exit
       WRITE(lures,921,ERR=9999) e%numel,e%stint(1:nstra)
       e => e%next                   !point to next element
     END DO
   END IF
 END IF

 RETURN
 900 FORMAT(5X,'STRESSES FOR 3-D SOLID ELEMENTS in MATERIAL AXES'//   &
 &       '      G   S-XX',9X,'S-YY',9X,'S-ZZ',9X,'S-XY',9X,'S-XZ',9X,'S-YZ', &
 &       9X,'EPST',9X,'VMST')
 901 FORMAT(//,5X,'Integrated Stresses for 3-D Solid-Shell Elements in Material Axes'//   &
 &       '   iel    N-XX',8X,'N-YY',8X,'N-XY',8X,'M-XX',8X,'M-YY',8X,'M-XY',9X,'Q-X',9X,'Q-Y')
 902 FORMAT(//,5X,'Integrated Stresses for 3-D Solid-Shell Elements in Material Axes'//   &
 &       '   iel    N-XX',8X,'N-YY',8X,'N-XY',8X,'M-XX',8X,'M-YY',8X,'M-XY',9X,'Q-X',9X,'Q-Y', &
 &              7x,'MF-XX',7X,'MF-YY',7x,'MF-XY',7x,'MF-YX',8X,'QF-X',8X,'QF-Y',7X,'eta-X',7X,'eta-Y' )
 920 FORMAT(5x,i2,8e13.4)
 921 FORMAT(i6,16e12.4)
 9999 CALL runen2('')
 END SUBROUTINE outp12
