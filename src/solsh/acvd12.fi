 SUBROUTINE acvd12(ifpre,heade,lside,nelem,nnode,zigzag,nnb)
 !******************************************************************
 !
 !*** updates internal node numbering and activates degrees of freedom
 !
 !******************************************************************
 USE esets_db, ONLY : gnods, gelem !INTENT(OUT) gnods(maxnn,melen)
 USE npo_db, ONLY : naeul
 IMPLICIT NONE

 ! dummy arguments
 INTEGER (kind=4):: nelem   !(IN) number of element
 INTEGER (kind=4):: nnb     !(IN) number of basic nodes per element
 INTEGER (kind=4):: nnode   !(IN) number of nodes per element
 INTEGER (kind=4):: ifpre(:,:)    !(OUT) active DOFs
 TYPE (ele12), POINTER :: heade   !pointer to first element in the set
 LOGICAL :: lside
 LOGICAL, INTENT(IN) :: zigzag

 ! local variables
 INTEGER (kind=4) inode,nnbs
 TYPE (ele12), POINTER  :: e                     !element pointers
 TYPE (section), POINTER :: sec      !auxiliar pointer
 INTEGER (kind=4) :: osec,isec,secty

 !***  create topological array  lnods(7:12,nelem)

 IF(.NOT.lside .AND. nnode == 12) CALL toar12(lside,nelem,heade)  !generate extended connectivities
 !
 !*** activates degrees of freedom
 !
   nnbs = nnb/2
   e => heade                         !point to first element
   DO
     IF (.NOT.ASSOCIATED (e) ) EXIT   !if all elements processed, Exit loop
     isec = e%matno
     IF( isec /= osec )THEN
       sec => psecs(isec)%p
       secty = sec%secty    !section constitutive type
       osec = isec
     END IF
     DO inode = 1,nnb                  !for each basic node in the element
       IF (ifpre(1,e%lnods(inode)) == 1 ) ifpre(1:3,e%lnods(inode)) = 0 !release DOFs
     END DO
     IF( secty == 5 .AND. zigzag ) THEN
       naeul(e%lnods(1:nnbs)) = .TRUE.
       ifpre(7:8,e%lnods(1:nnbs)) = 0  !nodes at bottom face only
     END IF
     gelem = gelem + 1                !update total number of elements
     gnods(1:nnode,gelem) = e%lnods   !pass to global array
     e => e%next                      !point to next element
   END DO

 RETURN
 END SUBROUTINE acvd12
