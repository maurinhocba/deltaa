 SUBROUTINE kgmm12 (cd,s,stiff,nvarl)
 !
 ! compute geometric stiffness for PRISM - Linear
 !
 IMPLICIT NONE
 ! dummy arguments
 REAL (kind=8), INTENT(IN) ::  cd(:,:,:,:),  & !cartesian derivatives at point
                               s(:,:)          !stresses * dvol
 REAL (kind=8), INTENT(OUT) :: stiff(:)  !stiffness matrix
 INTEGER (kind=4), INTENT(IN) :: nvarl
 ! local variables
 INTEGER (kind=4) i,j,k,l,n,pos,nv2,fa,kk
 REAL (kind=8) :: value,s11,s22,s12                  !diagonal value to add
 INTEGER (kind=4) poesti
 poesti(nv2,i,j) = (nv2-i)*(i-1)/2+j    ! position i,j in stiff(nxn)

 nv2 = 2*nvarl !twice the number of DOFs
 DO fa=1,2     !for each face
   s11 = s(1,fa) ; s22 = s(2,fa) ; s12 = s(3,fa)  !face contribution
   kk = 9*(fa-1)      !first Face DOF position - 1
   l = kk             ! initializes DOF position I
   DO i=1,3           ! for each node
     n = l            ! initializes DOF position J
     DO j=i,3         ! for each node (upper part)
       value = + s11* cd(i,1,1,fa)*cd(j,1,1,fa) + s22*cd(i,2,1,fa)*cd(j,2,1,fa)  &
               + s12*(cd(i,2,1,fa)*cd(j,1,1,fa) +     cd(j,2,1,fa)*cd(i,1,1,fa))
       DO k=1,3    ! for each DOF (diagonal only)
         pos = poesti(nv2,l+k,n+k)   ! (I,J)
         stiff(pos) = stiff(pos) + value
       END DO
       n = n + 3   ! increment DOF position J
     END DO
     l = l + 3     ! increment DOF position I
   END DO
 END DO

 RETURN
 END SUBROUTINE kgmm12
