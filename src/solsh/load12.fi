 SUBROUTINE load12 (igrav,force,gvect,gravy,heade,nnb)
 !********************************************************************
 !
 !***  evaluates gravity load vector for solid element 12
 !
 !********************************************************************
 IMPLICIT NONE

 INTEGER (kind=4) :: igrav,nnb
 REAL (kind=8) :: force(:,:),gvect(3),gravy
 TYPE (ele12), POINTER  :: heade

 !        local variable

 INTEGER (kind=4) n,l,isec,osec
 REAL (kind=8) weigt,fvect(3),dens,dvol
 TYPE (ele12), POINTER :: elem
 TYPE (section), POINTER :: sec
 LOGICAL :: newm


 IF(igrav /= 0) THEN       !if gravity is present


   osec = -1
   elem => heade           !point to first element
   DO
     IF (.NOT.ASSOCIATED (elem) ) EXIT    !all elements processed, Exit loop

     isec  = elem%matno                     !associated material
     newm = isec /= osec
     IF ( newm )THEN
       sec => psecs(isec)%p
       dens = sec%rprop(3)
       osec = isec
       weigt = gravy*dens                     !density
     END IF
     IF(weigt /= 0.0d0) THEN                !if not zero
       dvol = elem%dvol*weigt/nnb           !rather simplified for 8-node
       !force vector at each node
       fvect(:) = dvol*gvect
       DO n=1,nnb                                 !for each node (nnb=6)
         l = elem%lnods(n)                        !node number
         force(1:3,l) = force(1:3,l) + fvect      !sum on global force vector
       END DO
     END IF

     elem => elem%next                       !point to next element
   END DO
 END IF

 RETURN
 END SUBROUTINE load12
