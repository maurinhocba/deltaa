 SUBROUTINE acvd16(ifpre,nnode,heade,quad,lside,nelem)
 !******************************************************************
 !
 !*** updates internal node numbering and activates degrees of freedom
 !
 !******************************************************************
 USE esets_db, ONLY : gnods, gelem !INTENT(OUT) gnods(maxnn,melen)
 IMPLICIT NONE

 ! dummy arguments
 INTEGER (kind=4):: nnode   !(IN) number of nodes per element
 INTEGER (kind=4):: nelem   !(IN) number of element
 INTEGER (kind=4):: ifpre(:,:)    !(OUT) active DOFs
 TYPE (ele16), POINTER :: heade   !pointer to first element in the set
 LOGICAL :: quad,lside

 ! local variables
 INTEGER (kind=4) inode,nn
 TYPE (ele16), POINTER  :: e                     !element pointers


 !***  create topological array  lnods(7:12,nelem)

 IF(quad )THEN       !for quadratic approach
   IF(.NOT.lside) CALL toar16(lside,nelem,heade)  !generate extended connectivities
   nn = 12           !number of nodes in extended connectivities
 ELSE
   nn = nnode        !standard number of nodes
 END IF
 !
 !*** activates degrees of freedom
 !
   e => heade                         !point to first element
   DO
     IF (.NOT.ASSOCIATED (e) ) EXIT   !if all elements processed, Exit loop
     DO inode = 1,nnode               !for each node in the element
       IF (ifpre(1,e%lnods(inode)) == 1 ) ifpre(1:3,e%lnods(inode)) = 0 !release DOFs
     END DO
     gelem = gelem + 1                !update total number of elements
     gnods(1:nn,gelem) = e%lnods      !pass to global array
     e => e%next                      !point to next element
   END DO

 RETURN
 END SUBROUTINE acvd16
