 SUBROUTINE kgmm16 (cd,s,stiff,nnode,nn,quad,shell)
 !
 ! compute geometric stiffness for PRISM - standard
 !

 IMPLICIT NONE
 ! dummy arguments
 INTEGER(kind=4) :: nnode,nn
 REAL (kind=8), INTENT(IN) ::  cd(nnode,3),  & !cartesian derivatives at point
                               s(6)            !stresses * dvol
 REAL (kind=8), INTENT(OUT) :: stiff(*)  !stiffness matrix
 LOGICAL :: quad,shell
 ! local variables
 INTEGER (kind=4) i,j,k,l,n,pos,nv2
 REAL (kind=8) :: value                  !diagonal value to add
 INTEGER (kind=4) poesti
 poesti(nv2,i,j) = (nv2-i)*(i-1)/2+j    ! position i,j in stiff(nxn)


 nv2 = 6*nn
 l = 0           ! initializes DOF position I
 DO i=1,nnode    ! for each node
   n = l         ! initializes DOF position J
   DO j=i,nnode  ! for each node (upper part)
     value =   s(3)*cd(i,3)*cd(j,3)
     IF( .NOT.quad ) value = value                                 &
                     + s(1)*cd(i,1)*cd(j,1) + s(2)*cd(i,2)*cd(j,2) &
                     + s(4)*(cd(i,1)*cd(j,2)+cd(j,1)*cd(i,2))
     IF( .NOT.shell) value = value                                 &
                     + s(5)*(cd(i,1)*cd(j,3)+cd(j,1)*cd(i,3))      &
                     + s(6)*(cd(i,2)*cd(j,3)+cd(j,2)*cd(i,3))
     DO k=1,3    ! for each DOF (diagonal only)
       pos = poesti(nv2,l+k,n+k)   ! (I,J)
       stiff(pos) = stiff(pos) + value
     END DO
     n = n + 3   ! increment DOF position J
   END DO
   l = l + 3     ! increment DOF position I
 END DO

 RETURN
 END SUBROUTINE kgmm16
