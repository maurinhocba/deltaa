 SUBROUTINE btstr9(nn,ntype,deriv,shape,phin,x,r0,bts,dx,jac,s,zigzag,zigzpp,secty)
 !******************************************************************************
 !
 !     computes the contribution of gauss point to internal nodal forces
 !     Tranpose(B) S
 !     for beam/shell elements
 !
 !******************************************************************************
 IMPLICIT NONE
 !*** dummy arguments
 INTEGER (kind=4), INTENT(IN) :: nn,   & !number of nodes
                                 ntype,& !problem type
                                 secty   !section type
 REAL (kind=8), INTENT(IN) :: deriv(:), & !(nn)Nodal function derivatives (natural)
                              shape(:), & !(nn)nodal functions
                              phin(:),  & !(nn)nodal angles
                              x(:,:),   & !(2,nn)nodal coordinates
                              r0,       & !radius at element center
                              dx(:),    & !(2)configuration derivative
                              jac,      & !jacobian
                              s(:)        !(nstre)generalized stress x facto
 REAL (kind=8), INTENT(OUT) :: bts(:,:)   !(2,nn) internal forces
 LOGICAL, INTENT(IN) :: zigzag,zigzpp

 !*** local variables
 INTEGER (kind=4) n,nq,nm
 REAL    (kind=8) t1,t2,phi,dphi,r,derxi(nn),aux,n1,n2,m1,m2,q,dxx(2)
 REAL    (kind=8), PARAMETER :: Nxx(3) = (/ 1d0,-2d0,1d0 /)

 IF(ntype == 3) r = DOT_PRODUCT(x(1,:),shape) !radius at Gauss point
 phi  = DOT_PRODUCT(phin,shape)               !angle at Gauss Point
 derxi= deriv/jac                             !Nodal function derivatives (arc-length)
 dphi = DOT_PRODUCT(phin,derxi)               !angle derivative (arc-length)
 t1 = COS(phi)                                !tangent vector (r or x1 component)
 t2 = SIN(phi)                                !tangent vector (z or x2 component)
 IF( nn == 3 )THEN
   dxx = (x(:,1)*nxx(1)+x(:,2)*nxx(2)+x(:,3)*nxx(3))/jac**2
 ELSE
   dxx = 0d0
 END IF
 n1 = s(1)                                    !axial force o membrane 1 force
 IF(ntype == 1) THEN             !plane stress problem
   nm = 2
   nq = 3
 ELSE                            !plane strain or axilsymmetric problem
   nm = 3
   nq = 5
 END IF
 m1 = s(nm)                       !bending moment - 1
 q  = s(nq)                       !shear force
 DO n=1,nn                       !for each node
   bts(1,n)= bts(1,n)+ n1*derxi(n)*dx(1)
   bts(2,n)= bts(2,n)+ n1*derxi(n)*dx(2)
   !       bending contribution
   bts(1,n)= bts(1,n)- m1*t1*dphi*derxi(n)
   bts(2,n)= bts(2,n)- m1*t2*dphi*derxi(n)
   bts(3,n)= bts(3,n)- m1*(dphi*shape(n)*(-t2*dx(1)+t1*dx(2))+ &
                                derxi(n)*( t1*dx(1)+t2*dx(2)))
   !       transverse shear contribution
   bts(1,n)= bts(1,n)- q*derxi(n)*t2
   bts(2,n)= bts(2,n)+ q*derxi(n)*t1
   bts(3,n)= bts(3,n)- q*shape(n)*(dx(1)*t1+dx(2)*t2)
   IF( zigzag .AND. secty == 45 )THEN
     bts(4,n)= bts(4,n)+ s(nq+1)*derxi(n)
     bts(4,n)= bts(4,n)+ s(nq+2)*shape(n)
   END IF
   IF( zigzpp .AND. secty == 46 )THEN
     bts(4,n)= bts(4,n)+ s(nq+1)*derxi(n)          !M_f
     bts(4,n)= bts(4,n)+ s(nq+2)*shape(n)          !V_f
     bts(5,n)= bts(5,n)+ s(nq+3)*derxi(n)          !M_D
     bts(6,n)= bts(6,n)+ s(nq+4)*derxi(n)          !M_2
     bts(7,n)= bts(7,n)+ s(nq+5)*derxi(n)          !M_3
     bts(5,n)= bts(5,n)+ s(nq+6)*shape(n)          !V_D
     bts(6,n)= bts(6,n)+ s(nq+7)*shape(n)          !V_2
     bts(7,n)= bts(7,n)+ s(nq+8)*shape(n)          !V_3
   END IF
   IF(ntype == 3) THEN  !axilsymmetric
     n2 = s(2)                !membrane force 2 (hoop)
     m2 = s(4)                !bending moment 2 (hoop)
     aux = shape(n)/r0**2     !N/r^2
     !         hoop stress contribution
     bts(1,n) = bts(1,n) + n2 *aux*r
     !         hoop moment contribution
     bts(1,n) = bts(1,n) - m2 *aux*t2
     bts(3,n) = bts(3,n) - m2 *aux*t1*r
   END IF
 END DO
 !IF(zigzag .AND. secty == 46)THEN
 !  CALL bmatx9(nn,ntype,deriv(:,g),shape(:,g),phin,x,r0(g),  &
 !              bmatx,jac(g),zigzag,secty)
 !END IF
 RETURN
 END SUBROUTINE btstr9
