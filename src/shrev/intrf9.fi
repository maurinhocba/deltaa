 SUBROUTINE intrf9(nstre,ntype,plast,nnode,zigzag,zigzpp,ngaus,matty,secty,    &
                   axesc,ielem,weigh,shape,deriv,dmatx,props,prop1,     &
                   jac,r0,stra0,stres,sede0,sedef,                      &
                   ehist,strap,bts,x,phig,phil,estr,                    &
                   energ,istop,tn,thick,psi,iprop,ttime,disp)
 !***********************************************************************
 !
 !****this routine compute the internal nodal forces for element no. 9
 !    2-3 node shell/beam  element
 !***********************************************************************
 IMPLICIT NONE

 !***  routine parameters
 LOGICAL, INTENT(IN) :: plast
 INTEGER(kind=4), INTENT(IN) :: ngaus,nstre,nnode,matty,secty,axesc,ntype,iprop(:),ielem
 INTEGER(kind=4), INTENT(OUT) :: istop
 REAL(kind=8), INTENT(IN) :: dmatx(:),props(:),prop1(:),             &
                             shape(:,:),deriv(:,:),weigh(:),         &
                             jac(:),r0(:),stra0(:,:),sede0(:),       &
                             x(:,:),phig(:),phil(:),thick,psi(:,:),ttime,disp(4,nnode)
 REAL(kind=8), INTENT(OUT) :: stres(:,:),sedef(:),bts(:,:),energ(:),tn(:,:),estr(:)
 REAL (kind=8), POINTER :: ehist(:,:),strap(:,:,:)
 LOGICAL, INTENT(IN) :: zigzag,zigzpp
 !***  local variables
 INTEGER (kind=4) n,g,il,i
 REAL    (kind=8) phin(nnode),facto,tg(2,ngaus),dx(2,ngaus),    &
                  dstra(nstre),stran(nstre,ngaus),wf,wg
 REAL (kind=8),PARAMETER :: twopi=6.283185307179586d0, &
                            fs2  =0.788675134594813d0
 REAL (kind=8) :: bmatx(4,nnode,nstre),str(nstre)

 REAL(kind=8), SAVE :: delta
 INTEGER :: first

 !     compute the local cartesian system
 IF(axesc == 0) THEN
   phin = phig
 ELSE
   DO n=1,nnode
     phin(n) = phig(n) + phil(MIN(axesc,n))
   END DO
 END IF
 IF(ABS(phin(nnode)-phin(1)) > 3.2d0) THEN
   DO n=1,nnode
      IF(phin(n) < 0) phin(n) = phin(n)+twopi
   END DO
 END IF
 !     compute actual angles and curvatures
 CALL stran9(nnode,ngaus,nstre,ntype,x,dx,phin,stran,shape,deriv,jac,r0,tg,psi,zigzag,zigzpp)
      i=1
 !        Or        b matrix
 !     evaluates incremental and total stresses at gauss points
 IF( matty > 2)THEN   !orthotropic
   sedef = sede0
   CALL istgp9z(ngaus,ntype,nstre,stres,stra0,dmatx,prop1(5:),stran,energ,jac,weigh,zigzag,zigzpp,secty)
!  IF( ASSOCIATED(ehist)) THEN
!    wf = prop1(1)     !(1+beta)
!    wg = prop1(2)     !initial shear modulus
!    ehist(1,:) = wg*stran(5,:)*wf  !continuous shear stresss
!    !ehist(2,:) = 0d0
!    ehist(3,:) = ehist(1,:)+wg*(stran(3,:)- stran(5,:))   !total shear stress
     IF( zigzag .OR. zigzpp )THEN
       i = 1
       DO g=1,ngaus
         !keep strains to compute profiles at output
         estr(i:i+nstre-1) = stran(:,g)
         i=i+nstre
       END DO
     END IF
 ELSE
   CALL istgp9(matty,ngaus,nstre,plast,stres,stra0,sede0,sedef,ehist, &
               strap,dmatx,props,prop1,stran,energ,jac,weigh,istop)
 END IF
 !     sums contribution to residual forces
 bts = 0d0
 DO g=1,ngaus
   facto = jac(g)*weigh(g)
   IF(ntype == 3) facto = facto*r0(g)*twopi
   dstra = facto*stres(:,g)
   CALL btstr9(nnode,ntype,deriv(:,g),shape(:,g),phin,x, &
               r0(g),bts,dx(:,g),jac(g),dstra,zigzag,zigzpp,secty)
 END DO
 !
! DO g=1,ngaus
!   CALL bmatx9(nnode,ntype,deriv(:,g),shape(:,g),phin,x,r0(g),  &
!               bmatx,jac(g),zigzag,secty)
!   CALL proma1(disp,bmatx,dstra,4*nnode,1,nstre)
! END DO
 !
 facto = thick*SUM(sedef)/ngaus
 DO n=1,nnode
   tn(1,n) = -SIN(phin(n))*facto
   tn(2,n) =  COS(phin(n))*facto
 END DO
 RETURN
 END SUBROUTINE intrf9
