 SUBROUTINE acvdf9(nnode,ifpre,heade,naeul,zigzag,zigzpp)
 !******************************************************************
 !
 !*** activates degrees of freedom
 !
 !******************************************************************
 USE esets_db, ONLY : gnods, gelem !INTENT(OUT) gnods(maxnn,melen)
 IMPLICIT NONE

 ! dummy arguments
 INTEGER (kind=4), INTENT(IN) :: nnode       !number of nodes per element
 INTEGER (kind=4), INTENT(OUT) :: ifpre(:,:) !DOFs
 LOGICAL, INTENT(IN) :: zigzag,zigzpp
 LOGICAL, INTENT(OUT) :: naeul(:)            !exists
 TYPE (ele09), POINTER :: heade   !pointer to first element in the set

 TYPE (section), POINTER :: sec      !auxiliar pointer
 TYPE (ele09), POINTER  :: e                     !element pointers
 INTEGER (kind=4) :: i,osec,isec,secty

 !*** activates degrees of freedom

   osec = 0                           !Initializes
   e => heade                         !point to first element
   DO
     IF (.NOT.ASSOCIATED (e) ) EXIT   !if all elements processed, Exit loop
     isec = e%matno
     IF( isec /= osec )THEN
       sec => psecs(isec)%p
       secty = sec%secty    !section constitutive type
       osec = isec
     END IF
     DO i=1,nnode
       IF(ifpre(1,e%lnods(i)) == 1)THEN
         ifpre(1:3,e%lnods(i)) = 0       !release DOFs
         IF( (secty == 44 .OR. secty == 45 ).AND. zigzag ) ifpre(4,e%lnods(i)) = 0
         IF( secty == 46 .AND. zigzpp ) ifpre(4:7,e%lnods(i)) = 0
       END IF
     END DO
     naeul(e%lnods) = .TRUE.          !release DOFs
     gelem = gelem + 1                !update total number of elements
     gnods(1:nnode,gelem) = e%lnods   !pass to global array
     e => e%next                      !point to next element
   END DO

 RETURN
 END SUBROUTINE acvdf9
